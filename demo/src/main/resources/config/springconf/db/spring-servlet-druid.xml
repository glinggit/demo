<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans.xsd 
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx.xsd
          http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">


	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<!-- 基本属性 url、user、password -->
		 <property name="driverClassName" value="${jdbc.driver}">  
        </property>  
        <property name="url" value="${jdbc.url}"></property>  
        <property name="username" value="${jdbc.username}"></property>  
        <property name="password" value="${jdbc.password}"></property>  
                <!--initialSize: 初始化连接 -->  
        <property name="initialSize" value="5" />  
                <!--maxIdle: 最大空闲连接 -->  
        <property name="maxIdle" value="10" />  
        <property name="minIdle" value="5" />  
        <property name="maxActive" value="15" />  
        <property name="removeAbandoned" value="true" />  
        <property name="removeAbandonedTimeout" value="180" />  
                 <!-- maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->  
        <property name="maxWait" value="3000" />  
        <property name="validationQuery">  
            <value>SELECT 1</value>  
        </property>  
        <property name="testOnBorrow">  
            <value>true</value>  
        </property>  
	</bean>

	<!-- spring jdbc -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" /> 
	

	<!-- 声明式事务，事务拦截器 -->
	<!-- <bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		配置事务属性
		<property name="transactionAttributes">
			下面定义事务传播属性
			<props>
				<prop key="save*">PROPAGATION_REQUIRED</prop>
				<prop key="del*">PROPAGATION_REQUIRED</prop>
				<prop key="update">PROPAGATION_REQUIRED</prop>

				<prop key="get*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="find*">PROPAGATION_SUPPORTS,readOnly</prop>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	Bean后处理器BeanNameAutoProxyCreator，根据List配置创建事务代理
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		下面是所有需要自动创建事务代理的bean
		<property name="beanNames">
			<list>
				<value>*Service</value>
			</list>
		</property>
		下面定义BeanNameAutoProxyCreator所需的事务拦截器
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean> -->

</beans>